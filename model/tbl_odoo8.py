# -*- coding: utf-8 -*-

from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from sqlalchemy import *
from sqlalchemy import ForeignKey as FKey

Base = declarative_base()


class res_country(Base):
    """Страны"""
    __tablename__ = 'res_country'
    id = Column(Integer, primary_key=True)
    address_format = Column(Text)
    code = Column(String(2))
    create_date = Column(DateTime)
    create_uid = Column(Integer)
    write_date = Column(DateTime)
    write_uid = Column(Integer)
    currency_id = Column(Integer)
    image = Column(Binary)
    name = Column(String)


class res_country_state(Base):
    """Страны"""
    __tablename__ = 'res_country_state'
    id = Column(Integer, primary_key=True)
    code = Column(String(3))
    country_id = Column(Integer, FKey('res_country.id'), index=True)
    create_date = Column(DateTime)
    create_uid = Column(Integer)
    write_date = Column(DateTime)
    write_uid = Column(Integer)
    name = Column(String)


class crm_case_section(Base):
    """Отделы продаж"""
    __tablename__ = 'crm_case_section'
    id = Column(Integer, primary_key=True)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    create_date = Column(DateTime)
    write_date = Column(DateTime)
    working_hours = Column(Numeric)
    alias_id = Column(Integer, nullable=False)
    code = Column(String(8))
    active = Column(Boolean)
    change_responsible = Column(Boolean)
    user_id = Column(Integer, FKey('res_company.id'), index=True)  # Team Leader
    name = Column(String(64))
    note = Column(Text)
    parent_id = Column(Integer, FKey('crm_case_section.id'), index=True)
    complete_name = Column(String(256))
    reply_to = Column(String(64))
    resource_calendar_id = Column(Integer)
    color = Column(Integer)
    message_last_post = Column(DateTime)
    use_leads = Column(Boolean)
    use_opportunities = Column(Boolean)
    use_quotations = Column(Boolean)
    invoiced_target = Column(Integer)
    invoiced_forecast = Column(Integer)
    default_stage_id = Column(Integer, FKey('crm_case_stage.id'), index=True)
    track_act = Column(Boolean)


class crm_case_stage(Base):
    """Статусы Предложений"""
    __tablename__ = 'crm_case_stage'
    id = Column(Integer, primary_key=True)
    create_date = Column(DateTime)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    case_default = Column(Boolean)
    requirements = Column(Text)
    name = Column(String, nullable=False)
    probability = Column(Float)
    sequence = Column(Integer)
    on_change = Column(Boolean)
    fold = Column(Boolean)
    state = Column(String)
    type = Column(String, nullable=False)


class res_company(Base):
    """Компании"""
    __tablename__ = 'res_company'
    id = Column(Integer, primary_key=True)
    name = Column(String(128), nullable=False)
    parent_id = Column(Integer, FKey('res_company.id'), index=True)
    partner_id = Column(Integer, FKey('res_partner.id'), index=True, nullable=False)
    currency_id = Column(Integer, nullable=False)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    create_date = Column(DateTime)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    rml_footer = Column(Text)
    rml_header = Column(Text, nullable=False)
    rml_paper_format = Column(String, nullable=False)
    logo_web = Column(Binary)
    rml_header2 = Column(Text, nullable=False)
    rml_header3 = Column(Text, nullable=False)
    rml_header1 = Column(String)
    account_no = Column(String)
    company_registry = Column(String(64))
    custom_footer = Column(Boolean)
    font = Column(Integer)
    email = Column(String(64))
    phone = Column(String(64))
    paperformat_id = Column(Integer)
    expense_currency_exchange_account_id = Column(Integer)
    expects_chart_of_accounts = Column(Boolean)
    paypal_account = Column(String(128))
    overdue_msg = Column(Text)
    tax_calculation_rounding_method = Column(String)
    income_currency_exchange_account_id = Column(Integer)
    sale_note = Column(Text)
    accountant_id = Column(Integer, FKey('res_users.id'), index=True)
    print_stamp = Column(Boolean)
    stamp = Column(Binary)
    chief_id = Column(Integer, FKey('res_users.id'), index=True)
    print_facsimile = Column(Boolean)
    print_anywhere = Column(Boolean)
    internal_transit_location_id = Column(Integer)
    propagation_minimum_delta = Column(Integer)
    security_lead = Column(Float)
    manufacturing_lead = Column(Float)
    po_lead = Column(Float)
    timesheet_max_difference = Column(Float)
    timesheet_range = Column(String)
    project_time_mode_id = Column(Integer)
    is_department = Column(Boolean)
    is_legal_entity = Column(Boolean)
    auto_currency_up = Column(Boolean)


class res_partner(Base):
    """Клиенты"""
    __tablename__ = 'res_partner'
    id = Column(Integer, primary_key=True)
    name = Column(String, nullable=False)
    lang = Column(String)
    company_id = Column(Integer, FKey('res_company.id'), index=True)
    company = relationship(
        'res_company', foreign_keys='res_partner.company_id')
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    create_date = Column(DateTime)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    comment = Column(Text)
    ean13 = Column(String(13))
    color = Column(Integer)
    image = Column(Binary)
    use_parent_address = Column(Boolean)
    active = Column(Boolean)
    street = Column(String)
    supplier = Column(Boolean)
    city = Column(String)
    user_id = Column(Integer, FKey('res_users.id'), index=True)
    user = relationship(
        'res_users', foreign_keys='res_partner.user_id')
    zip = Column(String(24))
    title = Column(Integer)
    function = Column(String)
    country_id = Column(Integer)
    parent_id = Column(Integer, FKey('res_partner.id'), index=True)
    employee = Column(Boolean)
    type = Column(String)
    email = Column(String)
    vat = Column(String)
    website = Column(String)
    fax = Column(String)
    street2 = Column(String)
    phone = Column(String)
    credit_limit = Column(Float)
    date = Column(Date)
    tz = Column(String(64))
    customer = Column(Boolean)
    image_medium = Column(Binary)
    mobile = Column(String)
    ref = Column(String)
    image_small = Column(Binary)
    birthdate = Column(String)
    is_company = Column(Boolean)
    state_id = Column(Integer)
    opt_out = Column(Boolean)
    signup_type = Column(String)
    signup_expiration = Column(DateTime)
    signup_token = Column(String)
    section_id = Column(Integer, FKey('crm_case_section.id'), index=True)
    section = relationship(
        'crm_case_section', foreign_keys='res_partner.section_id')
    cm_user_taxpayerID = Column(String(40))
    display_name = Column(String)
    commercial_partner_id = Column(Integer)
    notify_email = Column(String, nullable=False)
    message_last_post = Column(DateTime)
    calendar_last_notif_ack = Column(DateTime)
    last_reconciliation_date = Column(DateTime)
    debit_limit = Column(Float)
    kpp = Column(String(9))
    okpo = Column(String(14))
    site_customer = Column(Boolean)
    speaker = Column(Boolean)
    website_meta_keywords = Column(String)
    website_meta_description = Column(Text)
    website_meta_title = Column(String)
    website_published = Column(Boolean)
    website_short_description = Column(Text)
    website_description = Column(Text)
    latest_followup_level_id_without_lit = Column(Integer)
    payment_next_action_date = Column(Date)
    latest_followup_level_id = Column(Integer)
    payment_next_action = Column(Text)
    payment_note = Column(Text)
    payment_responsible_id = Column(Integer)
    last_call_overdue = Column(Boolean)
    last_call = Column(Date)
    is_overdue = Column(Boolean)
    last_proposals = Column(Date)  # Дата закрытия последнего предложения
    last_quotation_overdue = Column(Boolean)


class res_users(Base):
    """Клиенты"""
    __tablename__ = 'res_users'
    id = Column(Integer, primary_key=True)
    active = Column(Boolean)
    login = Column(String(64))
    password = Column(String)
    company_id = Column(Integer, FKey('res_company.id'), index=True)
    partner_id = Column(Integer, FKey('res_partner.id'), index=True)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    create_date = Column(DateTime)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    menu_id = Column(Integer)
    login_date = Column(Date)
    signature = Column(Text)
    action_id = Column(Integer)
    alias_id = Column(Integer, nullable=False)
    share = Column(Boolean)
    password_crypt = Column(String)
    display_groups_suggestions = Column(Boolean)
    default_section_id = Column(Integer)
    facsimile = Column(Binary)
    display_employees_suggestions = Column(Boolean)
    google_calendar_token_validity = Column(DateTime)
    google_calendar_rtoken = Column(String)
    google_calendar_last_sync_date = Column(DateTime)
    google_calendar_token = Column(String)
    google_calendar_cal_id = Column(String)
    karma = Column(Integer)


class crm_phonecall(Base):
    """Звонки"""
    __tablename__ = 'crm_phonecall'
    id = Column(Integer, primary_key=True)
    active = Column(Boolean)
    categ_id = Column(Integer)
    company_id = Column(Integer, FKey('res_company.id'), index=True)
    company = relationship(
        'res_company', foreign_keys='crm_phonecall.company_id')
    create_date = Column(DateTime)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    date = Column(DateTime)
    date_action_last = Column(DateTime)
    date_action_next = Column(DateTime)
    date_closed = Column(DateTime)
    date_open = Column(DateTime)
    description = Column(Text)
    duration = Column(Float)
    email_from = Column(String)
    message_last_post = Column(DateTime)
    name = Column(String, nullable=False)
    opportunity_id = Column(Integer)
    partner_id = Column(Integer, FKey('res_partner.id'), index=True)
    partner = relationship(
        'res_partner', foreign_keys='crm_phonecall.partner_id')
    partner_mobile = Column(String)
    partner_phone = Column(String)
    priority = Column(String)
    section_id = Column(Integer, FKey('crm_case_section.id'), index=True)
    section = relationship(
        'crm_case_section', foreign_keys='crm_phonecall.section_id')
    stage_log_id = Column(Integer)
    state = Column(String)
    user_id = Column(Integer, FKey('res_users.id'), index=True)
    user = relationship(
        'res_users', foreign_keys='crm_phonecall.user_id')


class crm_lead(Base):
    """Предложения"""
    __tablename__ = 'crm_lead'
    id = Column(Integer, primary_key=True)
    active = Column(Boolean)
    campaign_id = Column(Integer)
    city = Column(String)
    color = Column(Integer)
    company_id = Column(Integer, FKey('res_company.id'), index=True)
    company = relationship(
        'res_company', foreign_keys='crm_lead.company_id')
    contact_name = Column(String)
    country_id = Column(Integer)
    create_date = Column(DateTime)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    date_action = Column(Date, index=True)
    date_action_last = Column(DateTime)
    date_action_next = Column(DateTime)
    date_closed = Column(DateTime)
    date_deadline = Column(Date)
    date_last_stage_update = Column(DateTime)
    date_open = Column(DateTime)
    day_close = Column(Numeric)
    day_open = Column(Numeric)
    description = Column(Text)
    email_cc = Column(Text)
    email_from = Column(String)
    fax = Column(String)
    function = Column(String)
    medium_id = Column(Integer)
    message_bounce = Column(Integer)
    message_last_post = Column(DateTime)
    mobile = Column(String)
    name = Column(String, nullable=False, index=True)
    opt_out = Column(Boolean)
    partner_id = Column(Integer, FKey('res_partner.id'), index=True)
    partner = relationship(
        'res_partner', foreign_keys='crm_lead.partner_id')
    partner_name = Column(String)
    payment_mode = Column(Integer)
    phone = Column(String)
    planned_cost = Column(Float)
    planned_profit = Column(Float)
    planned_revenue = Column(Float)
    priority = Column(String)
    probability = Column(Float)
    ref = Column(String)
    ref2 = Column(String)
    referred = Column(String)
    section_id = Column(Integer, FKey('crm_case_section.id'), index=True)
    section = relationship(
        'crm_case_section', foreign_keys='crm_lead.section_id')
    so_created = Column(Boolean)
    source_id = Column(Integer)
    stage_id = Column(Integer, FKey('crm_case_stage.id'), index=True)
    stage = relationship(
        'crm_case_stage', foreign_keys='crm_lead.stage_id')
    state = Column(String)
    state_id = Column(Integer)
    street = Column(String)
    street2 = Column(String)
    title = Column(Integer)
    title_action = Column(String)
    type = Column(String)
    user_id = Column(Integer, FKey('res_users.id'), index=True)
    user = relationship(
        'res_users', foreign_keys='crm_lead.user_id')
    zip_ = Column(String, name="zip")


class product_template(Base):
    """Шаблон продука"""
    __tablename__ = 'product_template'
    id = Column(Integer, primary_key=True)
    active = Column(Boolean)
    categ_id = Column(Integer, nullable=False)
    color = Column(Integer)
    company_id = Column(Integer, FKey('res_company.id'), index=True)
    company = relationship(
        'res_company', foreign_keys='product_template.company_id')
    copy_needed = Column(Boolean)
    copy_of_id = Column(Integer)
    create_date = Column(DateTime)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    description = Column(Text)
    description_purchase = Column(Text)
    description_sale = Column(Text)
    hr_expense_ok = Column(Boolean)
    image = Column(Binary)
    image_medium = Column(Binary)
    image_small = Column(Binary)
    list_price = Column(Numeric)
    loc_case = Column(String)
    loc_rack = Column(String)
    loc_row = Column(String)
    mes_type = Column(String)
    message_last_post = Column(String)
    name = Column(String, nullable=False)
    produce_delay = Column(Float)
    product_manager = Column(Integer)
    purchase_ok = Column(Boolean)
    purchase_requisition = Column(Boolean)
    rental = Column(Boolean)
    sale_delay = Column(Float)
    sale_ok = Column(Boolean)
    state = Column(String)
    track_all = Column(Boolean)
    track_incoming = Column(Boolean)
    track_outgoing = Column(Boolean)
    track_production = Column(Boolean)
    type = Column(String)
    uom_id = Column(Integer)
    uom_po_id = Column(Integer)
    uos_coeff = Column(Numeric)
    uos_id = Column(Integer)
    volume = Column(Float)
    warranty = Column(Float)
    weight = Column(Numeric)
    weight_net = Column(Numeric)


class product_product(Base):
    """Шаблон продука"""
    __tablename__ = 'product_product'
    id = Column(Integer, primary_key=True)
    active = Column(Boolean)
    barcode = Column(String)
    create_date = Column(DateTime)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    default_code = Column(String)
    message_last_post = Column(DateTime)
    name_template = Column(String)
    product_tmpl_id = Column(Integer, FKey('product_template.id'), index=True)
    product_tmpl = relationship(
        'product_template', foreign_keys='product_product.product_tmpl_id')
    volume = Column(Float)
    weight = Column(Numeric)


class sale_order(Base):
    """Заказ продаж"""
    __tablename__ = 'sale_order'
    id = Column(Integer, primary_key=True)
    create_date = Column(DateTime)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    amount_tax = Column(Numeric)
    amount_total = Column(Numeric)
    amount_untaxed = Column(Numeric)
    client_order_ref = Column(String)
    close_order_date = Column(Date)
    cm_recured_date = Column(Date)
    company_id = Column(Integer, FKey('res_company.id'), index=True)
    company = relationship(
        'res_company', foreign_keys='sale_order.company_id')
    contract_production_time = Column(Integer)
    contract_shipment_date = Column(Date)
    date_confirm = Column(Date)
    date_order = Column(DateTime)
    entity_for_proc = Column(Integer, FKey('sarrz_legal_entity.id'), index=True)
    legal_entity = relationship(
        'sarrz_legal_entity', foreign_keys='sale_order.entity_for_proc')
    fiscal_position = Column(Integer)
    incoterm = Column(Integer)
    matching_scheme_date = Column(Date)
    message_last_post = Column(DateTime)
    name = Column(String, index=True)
    note = Column(Text)
    order_policy = Column(String)
    order_procurement_confirmed = Column(Boolean)
    origin = Column(String)
    partner_id = Column(Integer)
    partner_invoice_id = Column(Integer)
    partner_shipping_id = Column(Integer)
    payment_term = Column(Integer)
    picking_policy = Column(String)
    prepayments_date = Column(Date)
    pricelist_id = Column(Integer)
    procurement_group_id = Column(Integer)
    project_id = Column(Integer)
    so_lines = relationship("sale_order_line")
    section_id = Column(Integer)
    shipment_date = Column(Date)
    shipped = Column(Boolean)
    state = Column(String)
    user_id = Column(Integer, FKey('res_users.id'), index=True)
    user = relationship(
        'res_users', foreign_keys='sale_order.user_id')
    warehouse_id = Column(Integer, FKey('stock_warehouse.id'), index=True)
    warehouse = relationship(
        'stock_warehouse', foreign_keys='sale_order.warehouse_id')


class sale_order_line(Base):
    """Позиция заказа продаж"""
    __tablename__ = 'sale_order_line'
    id = Column(Integer, primary_key=True)
    address_allotment_id = Column(Integer)
    client_product_name = Column(String)
    company_id = Column(Integer, FKey('res_company.id'), index=True)
    company = relationship(
        'res_company', foreign_keys='sale_order_line.company_id')
    contract_production_time = Column(Integer)
    contract_shipment_date = Column(Date)
    create_date = Column(DateTime)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    delay = Column(Float)
    discount = Column(Numeric)
    invoiced = Column(Boolean)
    name = Column(Text)
    order_id = Column(Integer, FKey('sale_order.id'), index=True)
    order = relationship(
        'sale_order', foreign_keys='sale_order_line.order_id')
    order_partner_id = Column(Integer)
    price_unit = Column(Numeric)
    product_id = Column(Integer)
    product_packaging = Column(Integer)
    product_uom = Column(Integer)
    product_uom_qty = Column(Numeric)
    product_uos = Column(Integer)
    product_uos_qty = Column(Numeric)
    requisition_required = Column(Boolean)
    route_id = Column(Integer)
    salesman_id = Column(Integer)
    sequence = Column(Integer)
    state = Column(String)
    th_weight = Column(Numeric)


class sarrz_legal_entity(Base):
    """Компания для выставления счетов"""
    __tablename__ = 'sarrz_legal_entity'
    id = Column(Integer, primary_key=True)
    create_date = Column(DateTime)
    create_uid = Column(Integer, FKey('res_users.id'), index=True)
    write_date = Column(DateTime)
    write_uid = Column(Integer, FKey('res_users.id'), index=True)
    name = Column(String)


class stock_warehouse(Base):
    """Склад"""
    __tablename__ = 'stock_warehouse'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    code = Column(String)
